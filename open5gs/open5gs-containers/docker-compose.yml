version: '3.8'

services:
  # MongoDB Database (Required by several NFs)
  # mongodb:
  #   image: mongo:5.0
  #   container_name: open5gs-mongodb
  #   hostname: mongodb
  #   networks:
  #     5gcore:
  #       ipv4_address: 10.10.0.250
  #   volumes:
  #     - mongodb_data:/data/db
  #     - ./mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
  #   environment:
  #     - MONGO_INITDB_ROOT_USERNAME=admin
  #     - MONGO_INITDB_ROOT_PASSWORD=admin123
  #     - MONGO_INITDB_DATABASE=open5gs
  #   restart: unless-stopped
  #   healthcheck:
  #     test: ["CMD", "mongo", "--eval", "db.adminCommand('ping')"]
  #     interval: 10s
  #     timeout: 5s
  #     retries: 5
  #     start_period: 10s

  # 5G Core Network Functions

  # NRF - Network Repository Function (Core service registry)
  nrf:
    build:
      context: ./nrf
      dockerfile: Dockerfile
    image: open5gs-nrf:latest
    container_name: open5gs-nrf
    hostname: nrf
    networks:
      5gcore:
        ipv4_address: 10.10.0.10
    ports:
      - "7710:7777/tcp"  # SBI interface
    volumes:
      - ./nrf/nrf.yaml:/etc/open5gs/custom/nrf.yaml:ro
      - ./logs/nrf:/var/log/open5gs
    # depends_on:
      # mongodb:
      #   condition: service_healthy
    restart: unless-stopped
    cap_add:
      - NET_ADMIN
    healthcheck:
      test: ["CMD", "pgrep", "open5gs-nrfd"]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 10s

  # SCP - Service Communication Proxy
  scp:
    build:
      context: ./scp
      dockerfile: Dockerfile
    image: open5gs-scp:latest
    container_name: open5gs-scp
    hostname: scp
    networks:
      5gcore:
        ipv4_address: 10.10.0.200
    ports:
      - "7722:7777/tcp"  # SBI interface
    volumes:
      - ./scp/scp.yaml:/etc/open5gs/custom/scp.yaml:ro
      - ./logs/scp:/var/log/open5gs
    depends_on:
      nrf:
        condition: service_healthy
    restart: unless-stopped
    cap_add:
      - NET_ADMIN
    healthcheck:
      test: ["CMD", "pgrep", "open5gs-scpd"]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 10s

  # UDR - Unified Data Repository
  udr:
    build:
      context: ./udr
      dockerfile: Dockerfile
    image: open5gs-udr:latest
    container_name: open5gs-udr
    hostname: udr
    networks:
      5gcore:
        ipv4_address: 10.10.0.20
    ports:
      - "7720:7777/tcp"  # SBI interface
    volumes:
      - ./udr/udr.yaml:/etc/open5gs/custom/udr.yaml:ro
      - ./logs/udr:/var/log/open5gs
    depends_on:
      # - mongodb
      - scp
    restart: unless-stopped
    cap_add:
      - NET_ADMIN
    healthcheck:
      test: ["CMD", "pgrep", "open5gs-udrd"]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 10s

  # UDM - Unified Data Management
  udm:
    build:
      context: ./udm
      dockerfile: Dockerfile
    image: open5gs-udm:latest
    container_name: open5gs-udm
    hostname: udm
    networks:
      5gcore:
        ipv4_address: 10.10.0.12
    ports:
      - "7712:7777/tcp"  # SBI interface
    volumes:
      - ./udm/udm.yaml:/etc/open5gs/custom/udm.yaml:ro
      - ./logs/udm:/var/log/open5gs
    depends_on:
      - udr
      - scp
    restart: unless-stopped
    cap_add:
      - NET_ADMIN
    healthcheck:
      test: ["CMD", "pgrep", "open5gs-udmd"]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 10s

  # AUSF - Authentication Server Function
  ausf:
    build:
      context: ./ausf
      dockerfile: Dockerfile
    image: open5gs-ausf:latest
    container_name: open5gs-ausf
    hostname: ausf
    networks:
      5gcore:
        ipv4_address: 10.10.0.11
    ports:
      - "7711:7777/tcp"  # SBI interface
    volumes:
      - ./ausf/ausf.yaml:/etc/open5gs/custom/ausf.yaml:ro
      - ./logs/ausf:/var/log/open5gs
    depends_on:
      - udm
      - scp
    restart: unless-stopped
    cap_add:
      - NET_ADMIN
    healthcheck:
      test: ["CMD", "pgrep", "open5gs-ausfd"]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 10s

  # PCF - Policy Control Function
  pcf:
    build:
      context: ./pcf
      dockerfile: Dockerfile
    image: open5gs-pcf:latest
    container_name: open5gs-pcf
    hostname: pcf
    networks:
      5gcore:
        ipv4_address: 10.10.0.13
    ports:
      - "7713:7777/tcp"  # SBI interface
      - "9013:9090/tcp"  # Metrics
    volumes:
      - ./pcf/pcf.yaml:/etc/open5gs/custom/pcf.yaml:ro
      - ./logs/pcf:/var/log/open5gs
    depends_on:
      # - mongodb
      - scp
    restart: unless-stopped
    cap_add:
      - NET_ADMIN
    healthcheck:
      test: ["CMD", "pgrep", "open5gs-pcfd"]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 10s

  # BSF - Binding Support Function
  # bsf:
  #   build:
  #     context: ./bsf
  #     dockerfile: Dockerfile
  #   image: open5gs-bsf:latest
  #   container_name: open5gs-bsf
  #   hostname: bsf
  #   networks:
  #     5gcore:
  #       ipv4_address: 10.10.0.15
  #   ports:
  #     - "7715:7777/tcp"  # SBI interface
  #   volumes:
  #     - ./bsf/bsf.yaml:/etc/open5gs/custom/bsf.yaml:ro
  #     - ./logs/bsf:/var/log/open5gs
  #   depends_on:
  #     - scp
  #   restart: unless-stopped
  #   cap_add:
  #     - NET_ADMIN
  #   healthcheck:
  #     test: ["CMD", "pgrep", "open5gs-bsfd"]
  #     interval: 10s
  #     timeout: 5s
  #     retries: 3
  #     start_period: 10s

  # NSSF - Network Slice Selection Function
  nssf:
    build:
      context: ./nssf
      dockerfile: Dockerfile
    image: open5gs-nssf:latest
    container_name: open5gs-nssf 
    hostname: nssf
    networks:
      5gcore:
        ipv4_address: 10.10.0.14
    ports:
      - "7714:7777/tcp"  # SBI interface
    volumes:
      - ./nssf/nssf.yaml:/etc/open5gs/custom/nssf.yaml:ro
      - ./logs/nssf:/var/log/open5gs
    depends_on:
      - scp
      - nrf
    restart: unless-stopped
    cap_add:
      - NET_ADMIN
    healthcheck:
      test: ["CMD", "pgrep", "open5gs-nssfd"]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 10s

  # AMF - Access and Mobility Management Function
  amf:
    build:
      context: ./amf
      dockerfile: Dockerfile
    image: open5gs-amf:latest
    container_name: open5gs-amf
    hostname: amf
    networks:
      5gcore:
        ipv4_address: 10.10.0.5
    ports:
      - "0.0.0.0:38412:38412/sctp"  # NGAP (N2 interface) - accessible from other VMs
      - "0.0.0.0:7705:7777/tcp"     # SBI interface - accessible from other VMs
      - "0.0.0.0:9005:9090/tcp"     # Metrics - accessible from other VMs
    volumes:
      - ./amf/amf.yaml:/etc/open5gs/amf.yaml:ro  # Mount config directly
      - ./logs/amf:/var/log/open5gs
    depends_on:
      - scp
      - ausf
      - udm
      - pcf
      - nssf
    restart: unless-stopped
    cap_add:
      - NET_ADMIN
    healthcheck:
      test: ["CMD", "pgrep", "open5gs-amfd"]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 10s

  # SMF - Session Management Function
  smf:
    build:
      context: ./smf
      dockerfile: Dockerfile
    image: open5gs-smf:latest
    container_name: open5gs-smf
    hostname: smf
    networks:
      5gcore:
        ipv4_address: 10.10.0.4
    ports:
      - "7704:7777/tcp"  # SBI interface
      - "8804:8805/udp"  # PFCP (N4)
      - "2123:2123/udp"  # GTP-C
      - "9004:9090/tcp"  # Metrics
    volumes:
      - ./smf/smf.yaml:/etc/open5gs/custom/smf.yaml:ro
      - ./logs/smf:/var/log/open5gs
    depends_on:
      - scp
      - pcf
      - udm
    restart: unless-stopped
    cap_add:
      - NET_ADMIN
    healthcheck:
      test: ["CMD", "pgrep", "open5gs-smfd"]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 10s

  # UPF - User Plane Function
  upf:
    build:
      context: ./upf
      dockerfile: Dockerfile
    image: open5gs-upf:latest
    container_name: open5gs-upf
    hostname: upf
    networks:
      5gcore:
        ipv4_address: 10.10.0.7
    ports:
      - "8807:8805/udp"  # PFCP (N4)
      - "2152:2152/udp"  # GTP-U (N3) - standard port
      - "2153:2153/udp"  # GTP-U (N3) - alternative port
      - "9007:9090/tcp"  # Metrics
    volumes:
      - ./upf/upf.yaml:/etc/open5gs/custom/upf.yaml:ro
      - ./logs/upf:/var/log/open5gs
    depends_on:
      - smf
    restart: unless-stopped
    privileged: true  # Required for TUN device and iptables
    cap_add:
      - NET_ADMIN
      - SYS_MODULE
    devices:
      - /dev/net/tun
    sysctls:
      - net.ipv4.ip_forward=1
      - net.ipv6.conf.all.forwarding=1
      - net.ipv6.conf.all.disable_ipv6=0
    healthcheck:
      test: ["CMD", "pgrep", "open5gs-upfd"]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 10s

networks:
  5gcore:
    driver: bridge
    ipam:
      driver: default
      config:
        - subnet: 10.10.0.0/24
          gateway: 10.10.0.1
    driver_opts:
      com.docker.network.bridge.name: br-5gcore
      com.docker.network.bridge.enable_icc: "true"
      com.docker.network.bridge.enable_ip_masquerade: "true"
      com.docker.network.bridge.host_binding_ipv4: 10.10.0.1

volumes:
  mongodb_data:
  logs:
